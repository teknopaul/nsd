# #-- xfr_rrsig.test --#
# source the master var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# use .tpkg.var.test for in test variable passing
[ -f .tpkg.var.test ] && source .tpkg.var.test

# start NSD
. ../common.sh
get_random_port 1
TPKG_PORT=$RND_PORT

PRE="../.."
TPKG_NSD_PID="nsd.pid.$$"
TPKG_NSD="$PRE/nsd"
# share the vars
echo "export TPKG_PORT=$TPKG_PORT" >> .tpkg.var.test
echo "export TPKG_NSD_PID=$TPKG_NSD_PID" >> .tpkg.var.test

$TPKG_NSD -c nsd_1.conf -u "" -p $TPKG_PORT -P $TPKG_NSD_PID

wait_nsd_up nsd.log
sleep 3
cat nsd.log

# now query for the update I sent and compare that with a known good one
echo port: $TPKG_PORT
dig @127.0.0.1 -p $TPKG_PORT opendnssec.se AXFR
dig @127.0.0.1 -p $TPKG_PORT opendnssec.se AXFR | grep -v '^;' > xfr_rrsig.current

echo "CURRENT:"
cat xfr_rrsig.current

echo "KNOWN GOOD:"
cat xfr_rrsig.known_good

sort xfr_rrsig.current | grep -v 'TYPE' | grep -v 'SPF' > xfr_rrsig.current.sorted
sort xfr_rrsig.known_good | grep -v 'TYPE' | grep -v 'SPF' > xfr_rrsig.known_good.sorted

diff -u xfr_rrsig.current.sorted xfr_rrsig.known_good.sorted
if [[ $? -ne 0 ]]; then
        exit 1
else
        exit 0
fi
