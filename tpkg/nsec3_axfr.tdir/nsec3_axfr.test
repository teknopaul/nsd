# #-- nsec3_axfr.test --#
# source the master var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# use .tpkg.var.test for in test variable passing
[ -f .tpkg.var.test ] && source .tpkg.var.test
. ../common.sh

# start NSD
get_random_port 1
TPKG_PORT=$RND_PORT

PRE="../.."
TPKG_NSD="$PRE/nsd"
NSD_OPTS="-V 4"
# share the vars
echo "export TPKG_PORT=$TPKG_PORT" >> .tpkg.var.test

# test with reading the zone from udb then axfr.
# compile nsd.db
cat nsd.conf | sed -e '/request-xfr/d' > nsd.conf.master
$TPKG_NSD -c nsd.conf.master -p $TPKG_PORT $NSD_OPTS
wait_nsd_up nsd.log
cat nsd.log
echo '>>> compiled'
kill_from_pidfile nsd.pid
$TPKG_NSD -c nsd.conf -p $TPKG_PORT $NSD_OPTS
wait_nsd_up nsd.log
wait_logfile nsd.log "serial 1 is updated to 2" 45
cat nsd.log
cat master.log

# now query for the update I sent and compare that with a known good one
echo port: $TPKG_PORT
dig @127.0.0.1 -p $TPKG_PORT +dnssec nonexist.example.net | tee data
if grep NSEC3 data; then
	echo OK
else
	if grep TYPE50 data; then
		echo old-dig
	else
		echo NoNSEC3
		exit 1
	fi
fi
echo

dig @127.0.0.1 -p $TPKG_PORT +dnssec delallrrsets.example.net | tee data
if grep NSEC3 data; then
	echo OK
else
	if grep TYPE50 data; then
		echo old-dig
	else
		echo NoNSEC3
		exit 1
	fi
fi

dig @127.0.0.1 -p $TPKG_PORT +dnssec bla.000.example.net | tee data
if grep NSEC3 data; then
	echo OK
else
	if grep TYPE50 data; then
		echo old-dig
	else
		echo NoNSEC3
		cat nsd.log
		exit 1
	fi
fi

cat nsd.log
cat master.log
exit 0
