# #-- testplan_deadlock.pre--#
# source the master var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# use .tpkg.var.test for in test variable passing
[ -f .tpkg.var.test ] && source .tpkg.var.test
. ../../common.sh

# start NSD
get_random_port 2
MASTER_PORT=$RND_PORT
SLAVE_PORT=$(($MASTER_PORT + 1))

PRE="../../.."
TPKG_NSD_PID="nsd.pid.$$"
TPKG_NSD_PID2="nsd.pid2.$$"
TPKG_NSD="$PRE/nsd"
NUMZONES=1000

# share the vars
echo "export MASTER_PORT=$MASTER_PORT" >> .tpkg.var.test
echo "export SLAVE_PORT=$SLAVE_PORT" >> .tpkg.var.test
echo "export TPKG_NSD_PID=$TPKG_NSD_PID" >> .tpkg.var.test
echo "export TPKG_NSD_PID2=$TPKG_NSD_PID2" >> .tpkg.var.test
echo "export NUMZONES=$NUMZONES" >> .tpkg.var.test

sed -e "s/MASTERPORT/$MASTER_PORT/" < testplan_deadlock.conf > slave.conf
cat slave.conf

# generate zones
echo "Generating zones: $NUMZONES"
i=0
while [[ $i -lt $NUMZONES ]]; do
	#echo "zone: $i"
	# zone config
	echo "zone: name: zone$i.example.com. zonefile: z$i.zone" >> slave.conf
	echo "		request-xfr: 127.0.0.1@$MASTER_PORT NOKEY" >> slave.conf
	echo "		allow-notify: 127.0.0.1 NOKEY" >> slave.conf
	echo "		allow-notify: ::ffff:127.0.0.1 NOKEY" >> slave.conf
	echo "		allow-notify: ::1 NOKEY" >> slave.conf
	# zone file
	echo "\$ORIGIN zone$i.example.com." > z$i.zone
	cat testplan_deadlock.zone >> z$i.zone
	# cat z$i.zone
	# question reply.
	echo "\$ORIGIN zone$i.example.com." >> master.qs
	cat testplan_deadlock.qs >> master.qs
	i=`expr $i + 1`
done
echo "Generated zones: $NUMZONES"

#echo "generated slave.conf:"
#cat slave.conf
#echo "generated master.qs:"
#cat master.qs

# slave
$TPKG_NSD -c slave.conf -u "" -p $SLAVE_PORT -P $TPKG_NSD_PID2
wait_nsd_up nsd.log

echo master has port $MASTER_PORT $TPKG_NSD_PID
echo slave at port $SLAVE_PORT $TPKG_NSD_PID2 = `cat $TPKG_NSD_PID2`
